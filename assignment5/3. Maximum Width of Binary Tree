class Solution {
    public int widthOfBinaryTree(TreeNode root) {
        int res = Integer.MIN_VALUE;
        Queue<TreeNode> q = new LinkedList<>();

        if(root == null) {
            return  res;
        }

        q.offer(root);
        while(!q.isEmpty()) {

            int size = q.size();
            List<Integer> list = new ArrayList<>();
            
            for(int i = 0; i < size; i++) {
                TreeNode cur = q.poll();
                if(cur.left != null ){
                    cur.left.val = 2 * (cur.val - 1) + 1;
                    q.offer(cur.left);
                }

                if (cur.right != null) {
                    cur.right.val = 2 * (cur.val - 1) + 2;
                    q.offer(cur.right);
                }
                list.add(cur.val);
            }
            int len = list.size();
            int width = list.get(len - 1) - list.get(0) + 1;
            res = Math.max(res, width);
        }
        return res;
    }
}
